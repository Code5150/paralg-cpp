cmake_minimum_required(VERSION 3.20)
project(paralg_cpp)

set(CMAKE_CXX_STANDARD 17)

find_package(MPI REQUIRED)

IF(CMAKE_COMPILER_IS_GNUCXX OR
    (CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND NOT ("${CMAKE_CXX_SIMULATE_ID}" STREQUAL "MSVC")))
    IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
        #SET(MY_C_FLAGS   ${MY_C_FLAGS}   -g2 -Wall)
        SET(MY_CXX_FLAGS ${MY_CXX_FLAGS} -g2 -Wall)
    ELSE()
        #SET(MY_C_FLAGS   ${MY_C_FLAGS}   -O2 -Wno-error)
        SET(MY_CXX_FLAGS ${MY_CXX_FLAGS} -O2 -march=znver3)
    ENDIF()
ENDIF()
if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC" OR "${CMAKE_CXX_SIMULATE_ID}" STREQUAL "MSVC")
    IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
        #SET(MY_C_FLAGS   ${MY_C_FLAGS}   -g2 -Wall)
        SET(MY_CXX_FLAGS ${MY_CXX_FLAGS} /Od /Wall)
    ELSE()
        #SET(MY_C_FLAGS   ${MY_C_FLAGS}   -O2 -Wno-error)
        SET(MY_CXX_FLAGS ${MY_CXX_FLAGS} /O2 /arch:AVX2)
    ENDIF()
ENDIF()
FOREACH(CXX_COMPILE_FLAG ${MY_CXX_FLAGS})
    ADD_COMPILE_OPTIONS($<$<COMPILE_LANGUAGE:CXX>:${CXX_COMPILE_FLAG}>)
ENDFOREACH()

add_executable(paralg_cpp main.cpp myutils.hpp)
target_precompile_headers(paralg_cpp PUBLIC [["mpi.h"]] <cstdio> <numeric> <vector> <random> <chrono> <clocale>)
target_link_libraries(paralg_cpp PUBLIC MPI::MPI_CXX)